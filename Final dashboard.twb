<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0213.2333                               -->
<workbook original-version='18.1' source-build='2019.1.0 (20191.19.0213.2333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='gapminder' inline='true' name='federated.108h8ib1n3c45h16hsdet12ftztz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='gapminder' name='textscan.0runogk0ed30p0110cvfy082lbg8'>
            <connection class='textscan' directory='D:/college/NEU/Quater 2/Data and communacation/Week 6' filename='gapminder.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0runogk0ed30p0110cvfy082lbg8' name='gapminder.csv' table='[gapminder#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='real' name='fertility' ordinal='2' />
            <column datatype='real' name='life' ordinal='3' />
            <column datatype='real' name='population' ordinal='4' />
            <column datatype='real' name='child_mortality' ordinal='5' />
            <column datatype='real' name='gdp' ordinal='6' />
            <column datatype='string' name='region' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fertility</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fertility]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>fertility</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>life</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>child_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[child_mortality]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>child_mortality</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>gdp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[gapminder.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:child_mortality:qk]&quot;' value='Average Child Mortality' />
          <alias key='&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:population:qk]&quot;' value='Average  Population' />
        </aliases>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Child Mortality' datatype='real' name='[child_mortality]' role='measure' type='quantitative' />
      <column caption='Fertility' datatype='real' name='[fertility]' role='measure' type='quantitative' />
      <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
      <column caption='Life' datatype='real' name='[life]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column-instance column='[child_mortality]' derivation='Avg' name='[avg:child_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[child_mortality]' derivation='Sum' name='[sum:child_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fertility]' derivation='Sum' name='[sum:fertility:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life]' derivation='Sum' name='[sum:life:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.390042' measure-ordering='alphabetic' measure-percentage='0.609959' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Central African Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[sum:gdp:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[sum:fertility:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:child_mortality:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[sum:life:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.108h8ib1n3c45h16hsdet12ftztz].[sum:child_mortality:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Group 1 Glary'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Highest Child Mortality Region Sub-Sahara with Country Mali from year 1964 to 2013 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='gapminder' name='federated.108h8ib1n3c45h16hsdet12ftztz' />
          </datasources>
          <datasource-dependencies datasource='federated.108h8ib1n3c45h16hsdet12ftztz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[child_mortality]' derivation='Avg' name='[avg:child_mortality:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Child Mortality' datatype='real' name='[child_mortality]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Country:nk]'>
            <groupfilter count='1' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([child_mortality])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:population:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.108h8ib1n3c45h16hsdet12ftztz].[:Measure Names]' value='160' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.108h8ib1n3c45h16hsdet12ftztz].[:Measure Names]' />
              <lod column='[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:child_mortality:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.108h8ib1n3c45h16hsdet12ftztz].[:Measure Names]' />
              <lod column='[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Country:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.108h8ib1n3c45h16hsdet12ftztz].[avg:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.108h8ib1n3c45h16hsdet12ftztz].[:Measure Names]' />
              <lod column='[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.108h8ib1n3c45h16hsdet12ftztz].[avg:child_mortality:qk] + [federated.108h8ib1n3c45h16hsdet12ftztz].[avg:population:qk])</rows>
        <cols>[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{64A860EA-AD4E-4C52-BF07-3DFA945C873E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Group 1 Glary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='1' param='[federated.108h8ib1n3c45h16hsdet12ftztz].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Country:nk]</field>
            <field>[federated.108h8ib1n3c45h16hsdet12ftztz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A658A1A-60F7-4EAC-B1BB-B23B70D8CB4C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Group 1 Glary' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
